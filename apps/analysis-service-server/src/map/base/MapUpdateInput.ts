/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { PointOfInterestUpdateManyWithoutMapsInput } from "./PointOfInterestUpdateManyWithoutMapsInput";
import { RouteUpdateManyWithoutMapsInput } from "./RouteUpdateManyWithoutMapsInput";

@InputType()
class MapUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateImportation?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  fichier?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nom?: string | null;

  @ApiProperty({
    required: false,
    type: () => PointOfInterestUpdateManyWithoutMapsInput,
  })
  @ValidateNested()
  @Type(() => PointOfInterestUpdateManyWithoutMapsInput)
  @IsOptional()
  @Field(() => PointOfInterestUpdateManyWithoutMapsInput, {
    nullable: true,
  })
  pointOfInterests?: PointOfInterestUpdateManyWithoutMapsInput;

  @ApiProperty({
    required: false,
    type: () => RouteUpdateManyWithoutMapsInput,
  })
  @ValidateNested()
  @Type(() => RouteUpdateManyWithoutMapsInput)
  @IsOptional()
  @Field(() => RouteUpdateManyWithoutMapsInput, {
    nullable: true,
  })
  routes?: RouteUpdateManyWithoutMapsInput;
}

export { MapUpdateInput as MapUpdateInput };
